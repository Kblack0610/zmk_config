/*
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mt LALT ESC  &kp Q &kp W &kp E &kp R &kp T    &kp Y &kp U  &kp I  &kp O   &kp P    &kp BSPC
     &mo 3 &kp A &kp S &kp D &kp F &kp G          &kp H    &kp J  &kp K     &kp L &kp SEMI &kp SQT
   &kp LSHFT &mt LCTRL Z &kp X &kp C &kp V &kp B  &kp N &kp M &kp COMMA &kp DOT &kp FSLH &none 
                  &mo 2 &kp LGUI &mt LCTRL TAB    &kp ENTER &kp SPACE &mo 1
                        >;
                };
                symbols {
                        bindings = <
  &none &kp EXCL &kp AT &kp MINUS &kp UNDER &kp PIPE  &kp PLUS &kp AMPS &kp LT &kp GT &none &none
  &none &kp HASH &kp DLLR &Kp LPAR &kp RPAR &none   &none &kp LBRC &kp RBRC &kp AMPS &kp ASTRK &kp DEL
  &none &kp CARET &kp PRCNT &kp LBKT &kp RBKT &none   &none &kp DQT &kp SQT &kp GRAVE &kp BSLH &none
      &none &none &kp LG(ENTER)   &kp SPACE &none &none
                        >;
                };
                nums_workspace {
                        bindings = <
  &none &kp LG(N7) &kp LG(N8) &kp E &kp LG(N9) &none   &kp EQUAL &kp N7 &kp N8 &kp N9 &kp N0 &none
  &kp BSPC &none &kp LG(N4) &kp LG(N5) &kp LG(N6) &none   &kp MINUS &kp N4 &kp N5 &kp N6 &kp PLUS &kp DEL
  &none &none &none &kp LG(N1) &LG(N2) &LG(N3)    &none &kp N1 &kp N2 &kp N3 &none &none
      &none &kp LGUI &none   &kp SPACE &kp F12 &none
                        >;
                };
                arrow_misc {
                        bindings = <
   &kp LALT &none &none &none &none &none   &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &none &kp RALT
   &none &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0   &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &none
   &bt BT_CLR &none &none &none &none &none   &kp C_RW &kp C_MUTE &none &kp C_FF &none &none
      &none &none &none   &none &kp C_PP &none 
                        >;
                };

        };
};
